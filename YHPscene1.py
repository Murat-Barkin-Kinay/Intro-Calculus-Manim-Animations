from manim import *

class EpsilonDelta(Scene):
    def construct(self):
        axes = Axes(x_range = [0,7,1], y_range = [0,5,1], x_length = 7, y_length = 5, axis_config = {"include_tip": True, "numbers_to_exclude": [0]}).add_coordinates()
        axis_labels = axes.get_axis_labels(x_label="x", y_label="f(x)")
        graph = axes.plot(lambda x: ((x ** 2) - 4)/(x - 2) if x != 2 else 4, x_range=[0, 8])
        dot = Dot(radius = 0.1).shift(1.5 * LEFT).shift(1.5 * UP)
        t_label1 = axes.get_T_label(x_val=2.75, graph=graph, label=MathTex("2+\\delta"))
        t_label2 = axes.get_T_label(x_val=2.75, graph=graph, label=MathTex("2-\\delta")).shift(1.5*LEFT)
        line1 = axes.get_horizontal_line((axes.c2p(6, 4.75, 0)))
        line2 = axes.get_horizontal_line((axes.c2p(6, 3.25, 0)))
        text1 = MathTex("4+\\varepsilon").shift(4.5 * LEFT).shift(2.25 * UP)
        text2 = MathTex("4-\\varepsilon").shift(4.5 * LEFT).shift(0.75 * UP)
        v1 = VGroup(line1, text1)
        v2 = VGroup(line2, text2)
        v = VGroup(t_label1,t_label2)
        vu = VGroup(axes, axis_labels, graph, dot, v, v1, v2)
        vu.shift(LEFT)
        texte1 = MathTex("\\varepsilon=0.75").shift(4 * RIGHT)
        texte2 = MathTex("\\varepsilon=0.25").shift(4 * RIGHT)
        texte3 = MathTex("\\varepsilon=0.65").shift(4 * RIGHT)
        texte4 = MathTex("\\varepsilon=0.05").shift(4 * RIGHT)
        self.play(DrawBorderThenFill(axes), Write(axis_labels))
        self.add(dot)
        self.play(Create(graph))
        self.play(Create(texte1))
        self.play(Create(t_label1), Create(t_label2), Create(v1), Create(v2))
        self.wait(2)
        self.play(Transform(texte1, texte2))
        self.play(t_label1.animate.shift(0.5 * LEFT), t_label2.animate.shift(0.5 * RIGHT), v1.animate.shift(0.5 * DOWN), v2.animate.shift(0.5 * UP))
        self.wait(2)
        self.play(Transform(texte1, texte3))
        self.play(t_label1.animate.shift(0.4 * RIGHT), t_label2.animate.shift(0.4 * LEFT), v1.animate.shift(0.4 * UP),
                  v2.animate.shift(0.4 * DOWN))
        self.wait(2)
        self.play(Transform(texte1, texte4))
        self.play(t_label1.animate.shift(0.6 * LEFT), t_label2.animate.shift(0.6 * RIGHT), v1.animate.shift(0.6 * DOWN),
                  v2.animate.shift(0.6 * UP))
        self.wait(2)